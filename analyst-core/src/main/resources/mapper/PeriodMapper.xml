<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.bl0ckchain.analyst.core.mapper.PeriodMapper">
  <resultMap id="BaseResultMap" type="me.bl0ckchain.analyst.core.entity.Period">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="unit_num" jdbcType="TINYINT" property="unitNum" />
    <result column="unit" jdbcType="TINYINT" property="unit" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, unit_num, unit, create_at, update_at, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from a_period
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from a_period
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="me.bl0ckchain.analyst.core.entity.Period">
    insert into a_period (id, unit_num, unit, 
      create_at, update_at, status
      )
    values (#{id,jdbcType=BIGINT}, #{unitNum,jdbcType=TINYINT}, #{unit,jdbcType=TINYINT}, 
      #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.bl0ckchain.analyst.core.entity.Period">
    insert into a_period
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unitNum != null">
        unit_num,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="unitNum != null">
        #{unitNum,jdbcType=TINYINT},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=TINYINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.bl0ckchain.analyst.core.entity.Period">
    update a_period
    <set>
      <if test="unitNum != null">
        unit_num = #{unitNum,jdbcType=TINYINT},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=TINYINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.bl0ckchain.analyst.core.entity.Period">
    update a_period
    set unit_num = #{unitNum,jdbcType=TINYINT},
      unit = #{unit,jdbcType=TINYINT},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from a_period
    <if test="ids != null">
      where id in
      <foreach collection="ids" item="id" index="index"
               open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>

  <select id="findByUnit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from a_period
    where unit = #{unit,jdbcType=TINYINT}
    and unit_num = #{unitNum,jdbcType=TINYINT}
  </select>

  <select id="selectIds" resultType="java.lang.Long">
    select
    id
    from a_period
    where status = 0
  </select>
</mapper>
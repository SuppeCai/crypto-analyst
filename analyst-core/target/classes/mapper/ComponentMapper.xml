<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.bl0ckchain.analyst.core.mapper.ComponentMapper">
  <resultMap id="BaseResultMap" type="me.bl0ckchain.analyst.core.entity.Component">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="exchange_id" jdbcType="BIGINT" property="exchangeId" />
    <result column="asset_pair_id" jdbcType="BIGINT" property="assetPairId" />
    <result column="period_id" jdbcType="BIGINT" property="periodId" />
    <result column="component_type" jdbcType="TINYINT" property="componentType" />
    <result column="component_id" jdbcType="BIGINT" property="componentId" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, exchange_id, asset_pair_id, period_id, component_type, component_id, create_at, update_at,
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from a_component
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from a_component
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="me.bl0ckchain.analyst.core.entity.Component">
    insert into a_component (id, exchange_id, asset_pair_id, period_id,
      component_type, component_id, create_at, 
      update_at, status)
    values (#{id,jdbcType=BIGINT}, #{exchangeId,jdbcType=BIGINT}, #{assetPairId,jdbcType=BIGINT}, #{periodId,jdbcType=BIGINT},
      #{componentType,jdbcType=TINYINT}, #{componentId,jdbcType=BIGINT}, #{createAt,jdbcType=BIGINT}, 
      #{updateAt,jdbcType=BIGINT}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="me.bl0ckchain.analyst.core.entity.Component">
    insert into a_component
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="exchangeId != null">
        exchange_id,
      </if>
      <if test="assetPairId != null">
        asset_pair_id,
      </if>
      <if test="periodId != null">
        period_id,
      </if>
      <if test="componentType != null">
        component_type,
      </if>
      <if test="componentId != null">
        component_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="exchangeId != null">
        #{exchangeId,jdbcType=BIGINT},
      </if>
      <if test="assetPairId != null">
        #{assetPairId,jdbcType=BIGINT},
      </if>
      <if test="periodId != null">
        #{periodId,jdbcType=BIGINT},
      </if>
      <if test="componentType != null">
        #{componentType,jdbcType=TINYINT},
      </if>
      <if test="componentId != null">
        #{componentId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.bl0ckchain.analyst.core.entity.Component">
    update a_component
    <set>
      <if test="exchangeId != null">
        exchange_id = #{exchangeId,jdbcType=BIGINT},
      </if>
      <if test="assetPairId != null">
        asset_pair_id = #{assetPairId,jdbcType=BIGINT},
      </if>
      <if test="periodId != null">
        period_id = #{periodId,jdbcType=BIGINT},
      </if>
      <if test="componentType != null">
        component_type = #{componentType,jdbcType=TINYINT},
      </if>
      <if test="componentId != null">
        component_id = #{componentId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.bl0ckchain.analyst.core.entity.Component">
    update a_component
    set exchange_id = #{exchangeId,jdbcType=BIGINT},
      asset_pair_id = #{assetPairId,jdbcType=BIGINT},
      period_id = #{periodId,jdbcType=BIGINT},
      component_type = #{componentType,jdbcType=TINYINT},
      component_id = #{componentId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="listAssociatedIds" parameterType="java.lang.Long" resultType="java.lang.Long">
    select
    id
    from a_component
    where component_id = #{componentId,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from a_component
    <if test="ids != null">
      where id in
      <foreach collection="ids" item="id" index="index"
               open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>

  <select id="selectIdByQuery" parameterType="me.bl0ckchain.analyst.core.query.ComponentQuery" resultType="java.lang.Long">
    select
    id
    from a_component
    where 1=1
    <if test="componentType!=null">
      and component_type =  #{componentType}
    </if>
    <if test="componentId!=null">
      and component_id =  #{componentId}
    </if>
  </select>
</mapper>